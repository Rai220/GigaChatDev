{
  "DemandAnalysis": {
      "assistant_role_name": "Chief Product Officer",
      "user_role_name": "Chief Executive Officer",
      "phase_prompt": [
          "ChatDev ранее создавал продукты в следующих форматах:",
          "Изображение: может представлять информацию в виде линейных графиков, столбчатых графиков, блок-схем, облачных графиков, диаграмм Ганта и т.д.",
          "Документ: может представлять информацию в файлах .docx.",
          "PowerPoint: может представлять информацию в файлах .pptx.",
          "Excel: может представлять информацию в файлах .xlsx.",
          "PDF: может представлять информацию в файлах .pdf.",
          "Веб-сайт: может представлять личное резюме, учебник, продукты или идеи в файлах .html.",
          "Приложение: может реализовывать визуализированную игру, программное обеспечение, инструмент и т.д. на python.",
          "Панель управления: может отображать панель, визуализирующую информацию в реальном времени.",
          "Ментальная карта: может представлять идеи, с связанными концепциями, расположенными вокруг основной концепции.",
          "В качестве {assistant_role}, чтобы удовлетворить потребности пользователя и продукт должен быть реализуем, вы должны продолжать обсуждение со мной, чтобы решить, в какой форме мы хотим видеть продукт?",
          "Обратите внимание, что мы должны обсуждать ТОЛЬКО форму продукта и не обсуждать ничего другого! Как только все выскажут свое мнение и единогласно согласятся с результатами обсуждения, любой из нас должен активно завершить обсуждение, ответив всего одной строкой, которая начинается с одного слова <INFO>, за которым следует наша окончательная форма продукта без каких-либо других слов, например, \"<INFO> PowerPoint\"."
      ]
  },
  "LanguageChoose": {
      "assistant_role_name": "Chief Technology Officer",
      "user_role_name": "Chief Executive Officer",
      "phase_prompt": [
          "Согласно новой задаче пользователя и некоторым творческим идеям, сформулированным ниже: ",
          "Задача: \"{task}\".",
          "Тип решения: \"{modality}\".",
          "Идеи: \"{ideas}\".",
          "Мы решили выполнить задачу с помощью исполняемого программного обеспечения, реализованного на языке программирования. ",
          "В качестве {assistant_role}, чтобы удовлетворить потребности пользователя и сделать программное обеспечение реализуемым, вы должны предложить конкретный язык программирования. Если задачу можно выполнить на Python, пожалуйста, ответьте Python; в противном случае, ответьте другим языком программирования (например, Java, C++, и т.д.).",
          "Обратите внимание, что мы должны ОБСУЖДАТЬ ТОЛЬКО целевой язык программирования и не обсуждать ничего другого! Как только все мы выразим свое мнение и единогласно согласимся с результатами обсуждения, любой из нас должен активно завершить обсуждение и сделать вывод о лучшем языке программирования, о котором мы обсуждали, без каких-либо других слов или причин, вернуть только одну строку в формате: \"<INFO> *\", где \"*\" представляет собой язык программирования. Например, \"<INFO> Python\", если вы выбрали Python."
      ]
  },
  "Coding": {
      "assistant_role_name": "Programmer",
      "user_role_name": "Chief Technology Officer",
      "phase_prompt": [
          "Согласно новой задаче пользователя и нашим программным решениям, перечисленным ниже: ",
          "Задача: \"{task}\".",
          "Тип решения: \"{modality}\".",
          "Язык программирования: \"{language}\"",
          "Идеи:\"{ideas}\"",
          "Мы решили выполнить задачу с помощью исполняемого программного обеспечения с несколькими файлами, реализованными на {language}. В качестве {assistant_role}, чтобы удовлетворить требования пользователя, вы должны написать один или несколько файлов и убедиться, что каждая деталь архитектуры в конечном итоге реализована в виде кода. {gui}",
          "Думай шаг за шагом и приходи к к правильным решениям, чтобы мы все сделали правильно. Не забывай про import библиотек, которые ты используешь и правильные отступы в коде.",
          "Сначала вы определите имена основных классов, функций, методов, которые будут необходимы, а также кратко прокомментируете их назначение.",
          "Затем вы выведете содержимое каждого файла, включая полный код. Каждый файл должен строго следовать формату блока кода markdown, где следующие токены должны быть заменены так, что \"FILENAME\" - это имя файла в нижнем регистре, включая расширение файла (например main.py), \"LANGUAGE\" - это язык программирования, \"DOCSTRING\" - это строковый литерал, указанный в исходном коде, который используется для документирования определенного сегмента кода, а \"CODE\" - это исходный код:",
          "FILENAME",
          "```LANGUAGE",
          "'''",
          "DOCSTRING",
          "'''",
          "CODE",
          "```",
          "Вы начнете с файла \"main\", затем перейдете к файлам, которые импортируются этим файлом, и так далее.",
          "Обратите внимание, что код должен быть полностью функциональным. Обязательно реализуйте все функции. Никаких заполнителей (таких как 'pass' в Python). Если в коде уже есть заполнители, вроде pass, комментарии с TODO и тому подобное - пиши вместо этого работающий код."
      ]
  },
  "ArtDesign": {
      "assistant_role_name": "Programmer",
      "user_role_name": "Chief Creative Officer",
      "phase_prompt": [
          "Ниже приведены разработанные нами исходные коды и соответствующие тестовые отчеты: ",
          "Задача: \"{task}\".",
          "Язык программирования: \"{language}\"",
          "Исходные коды:",
          "\"{codes}\"",
          "Обратите внимание, что каждый файл должен строго следовать формату блока кода markdown, где следующие токены должны быть заменены таким образом, что \"FILENAME\" - это имя файла в нижнем регистре, включая расширение файла, \"LANGUAGE\" - это язык программирования, \"DOCSTRING\" - это строковый литерал, указанный в исходном коде, который используется для документирования определенного сегмента кода, а \"CODE\" - это исходный код:",
          "FILENAME",
          "```LANGUAGE",
          "'''",
          "DOCSTRING",
          "'''",
          "CODE",
          "```",
          "В качестве {assistant_role}, чтобы удовлетворить потребности пользователя и обеспечить программное обеспечение красивым графическим интерфейсом (GUI), мы обсудим и спроектируем множество декоративных изображений для украшения GUI. Сейчас мы продолжаем обсуждение украшения GUI, перечисляя некоторые функционально независимые элементы в GUI, которые рассматриваются для украшения различными изображениями. Например, десять цифр (0-9) на калькуляторе являются функционально независимыми.",
          "Для ответа используйте формат: \" FILENAME.png: ОПИСАНИЕ\", где \"FILENAME\" - это имя файла изображения, а \"ОПИСАНИЕ\" обозначает подробное описание независимых элементов. Например:",
          "'''",
          "button_1.png: Кнопка с номером \"1\" на ней.",
          "button_multiply.png: Кнопка с символом умножения (\"*\") на ней.",
          "background.png: цвет фона для украшения игры Go",
          "'''",
          "Теперь перечислите все функционально независимые элементы насколько это возможно."
      ]
  },
  "ArtIntegration": {
      "assistant_role_name": "Programmer",
      "user_role_name": "Chief Creative Officer",
      "phase_prompt": [
          "Ниже приведены разработанные нами исходные коды и соответствующие отчеты о тестировании: ",
          "Задача: \"{task}\".",
          "Язык программирования: \"{language}\"",
          "Исходные коды:",
          "\"{codes}\"",
          "Обратите внимание, что каждый файл должен строго следовать формату блока кода markdown, где следующие токены должны быть заменены таким образом, что \"FILENAME\" - это имя файла в нижнем регистре, включая расширение файла, \"LANGUAGE\" - это язык программирования, \"DOCSTRING\" - это строковый литерал, указанный в исходном коде, который используется для документирования определенного сегмента кода, а \"CODE\" - это исходный код:",
          "FILENAME",
          "```LANGUAGE",
          "'''",
          "DOCSTRING",
          "'''",
          "CODE",
          "```",
          "В качестве {assistant_role}, чтобы удовлетворить потребности пользователя и оснастить программное обеспечение красивым графическим пользовательским интерфейсом (GUI), вы будете включать наши разработанные изображения для украшения GUI. Вот некоторые готовые высококачественные картинки и соответствующие описания:",
          "{images}",
          "Обратите внимание, что разработанные изображения имеют фиксированный размер 256x256 пикселей и изображения находятся в той же директории, что и все файлы Python; пожалуйста, динамически масштабируйте эти изображения в соответствии с размером GUI и используйте \"self.*\" чтобы избежать проблем с отображением, вызванных автоматическим сбором мусора. Например:",
          "```",
          "self.image = ImageTk.PhotoImage(Image.open(\"./image.png\").resize((50, 50)))",
          "```",
          "Теперь используйте некоторые или все изображения в GUI, чтобы сделать его более красивым и творческим. Выводите коды, строго следуя указанному выше требуемому формату."
      ]
  },
  "CodeComplete": {
      "assistant_role_name": "Programmer",
      "user_role_name": "Chief Technology Officer",
      "phase_prompt": [
          "Согласно новой задаче пользователя и нашим программным решениям, перечисленным ниже: ",
          "Задача: \"{task}\".",
          "Тип решения: \"{modality}\".",
          "Язык программирования: \"{language}\"",
          "Коды:",
          "\"{codes}\"",
          "Не реализованный файл:",
          "\"{unimplemented_file}\"",
          "В нашем программном обеспечении каждый файл должен строго следовать формату блока кода markdown, где следующие токены должны быть заменены таким образом, что \"FILENAME\" - это имя файла в нижнем регистре, включая расширение файла, \"LANGUAGE\" - это язык программирования, \"DOCSTRING\" - это строковый литерал, указанный в исходном коде, который используется для документирования определенного сегмента кода, а \"CODE\" - это исходный код:",
          "FILENAME",
          "```LANGUAGE",
          "'''",
          "DOCSTRING",
          "'''",
          "CODE",
          "```",
          "В качестве {assistant_role}, чтобы удовлетворить полную функциональность нашего разработанного программного обеспечения, вы должны реализовать все методы в файле {unimplemented_file}, который содержит нереализованный класс. Теперь реализуйте все методы {unimplemented_file} и все другие необходимые коды, затем выведите полностью реализованные коды, строго следуя требуемому формату."
      ]
  },
  "CodeReviewComment": {
      "assistant_role_name": "Code Reviewer",
      "user_role_name": "Programmer",
      "phase_prompt": [
          "Согласно новой задаче пользователя и нашим программным решениям: ",
          "Задача: \"{task}\".",
          "Тип решения: \"{modality}\".",
          "Язык программирования: \"{language}\"",
          "Идеи: \"{ideas}\"",
          "Коды:",
          "\"{codes}\"",
          "В качестве {assistant_role}, чтобы сделать программное обеспечение непосредственно работоспособным без дальнейшего кодирования, ChatDev сформулировали следующие правила:",
          "1) все ссылочные классы должны быть импортированы;",
          "2) все методы должны быть реализованы;",
          "3) все методы должны иметь необходимые комментарии;",
          "4) отсутствие потенциальных ошибок;",
          "5) Весь проект соответствует задачам, предложенным пользователем;",
          "6) самое главное, не только проверять ошибки в коде, но и логику кода. Убедитесь, что пользователь может взаимодействовать с созданным программным обеспечением, не теряя ни одной функции в требовании;",
          "Теперь вам следует проверить все вышеуказанные правила по порядку и подробно рассмотреть коды, предложить один комментарий с наивысшим приоритетом о кодах и дать мне инструкции по исправлению. Скажите мне ваш комментарий с наивысшим приоритетом и соответствующие предложения по исправлению. Если коды идеальны и у вас нет к ним замечаний, верните только одну строку, например \"<INFO> Finished\"."
      ]
  },
  "CodeReviewModification": {
      "assistant_role_name": "Programmer",
      "user_role_name": "Code Reviewer",
      "phase_prompt": [
          "Согласно новой задаче пользователя, нашей разработанной модели продукта, языкам и идеям, ниже приведены исходные коды первой версии: ",
          "Задача: \"{task}\".",
          "Тип: \"{modality}\".",
          "Язык программирования: \"{language}\"",
          "Идеи: \"{ideas}\"",
          "Коды: ",
          "\"{codes}\"",
          "Комментарии к кодам:",
          "\"{comments}\"",
          "В программном обеспечении каждый файл должен строго следовать формату блока кода markdown, где следующие токены должны быть заменены таким образом, что \"FILENAME\" - это имя файла в нижнем регистре, включая расширение файла, \"LANGUAGE\" - это язык программирования, \"DOCSTRING\" - это строковый литерал, указанный в исходном коде, который используется для документирования определенного сегмента кода, а \"CODE\" - это исходный код. Формат:",
          "FILENAME",
          "```LANGUAGE",
          "'''",
          "DOCSTRING",
          "'''",
          "CODE",
          "```",
          "В качестве {assistant_role}, чтобы удовлетворить новые потребности пользователя и сделать программное обеспечение креативным, полезным и надежным, вы должны изменить соответствующие коды в соответствии с комментариями. Затем выведите полные и завершенные коды со всеми исправленными ошибками на основе комментариев. Верните все коды, строго следуя требуемому формату."
      ]
  },
  "TestErrorSummary": {
      "assistant_role_name": "Programmer",
      "user_role_name": "Software Test Engineer",
      "phase_prompt": [
          "Ниже приведены разработанные нами исходные коды и соответствующие тестовые отчеты: ",
          "Язык программирования: \"{language}\"",
          "Исходные коды:",
          "\"{codes}\"",
          "Тестовые отчеты исходных кодов:",
          "\"{test_reports}\"",
          "Согласно моим тестовым отчетам, найдите и суммируйте ошибки, которые вызывают проблему."
      ]
  },
  "TestModification": {
      "assistant_role_name": "Programmer",
      "user_role_name": "Software Test Engineer",
      "phase_prompt": [
          "Ниже приведены разработанные нами исходные коды и соответствующие тестовые отчеты: ",
          "Язык программирования: \"{language}\"",
          "Исходные коды:",
          "\"{codes}\"",
          "Тестовые отчеты исходных кодов:",
          "\"{test_reports}\"",
          "Сводка ошибок тестовых отчетов:",
          "\"{error_summary}\"",
          "Обратите внимание, что каждый файл должен строго следовать формату блока кода markdown, где следующие токены должны быть заменены таким образом, что \"FILENAME\" - это имя файла в нижнем регистре, включая расширение файла, \"LANGUAGE\" - это язык программирования, \"DOCSTRING\" - это строковый литерал, указанный в исходном коде, который используется для документирования определенного сегмента кода, а \"CODE\" - это исходный код:",
          "FILENAME",
          "```LANGUAGE",
          "'''",
          "DOCSTRING",
          "'''",
          "CODE",
          "```",
          "В качестве {assistant_role}, чтобы удовлетворить потребности пользователя и обеспечить плавное и надежное выполнение программного обеспечения, вы должны изменить коды на основе сводки ошибок. Теперь используйте приведенный выше формат и измените проблемные коды на основе сводки ошибок. Выведите коды, которые вы исправили на основе тестового отчета и соответствующих объяснений (строго следуйте определенному выше формату, включая FILENAME, LANGUAGE, DOCSTRING и CODE; неполные коды \"TODO\" строго запрещены). Если ошибки не сообщаются, верните только одну строку, например, \"<INFO> Finished\"."
      ]
  },
  "EnvironmentDoc": {
      "assistant_role_name": "Programmer",
      "user_role_name": "Chief Technology Officer",
      "phase_prompt": [
          "Задача пользователя и наши разработанные коды указаны: ",
          "Задача: \"{task}\".",
          "Тип решения: \"{modality}\".",
          "Язык программирования: \"{language}\"",
          "Идеи: \"{ideas}\"",
          "Коды: ",
          "\"{codes}\"",
          "В качестве {assistant_role}, вы должны написать файл requirements.txt, который обычно используется в проектах на Python для указания зависимостей или пакетов, необходимых для правильной работы проекта. Он служит способом документирования и управления зависимостями проекта в стандартизированном формате. Например:",
          "requirements.txt",
          "```",
          "numpy==1.19.2",
          "pandas>=1.1.4",
          "```",
          "Согласно кодам и формату файла, указанным выше, напишите файл requirements.txt, чтобы указать зависимости или пакеты, необходимые для правильной работы проекта."
      ]
  },
  "Manual": {
      "assistant_role_name": "Chief Product Officer",
      "user_role_name": "Chief Executive Officer",
      "phase_prompt": [
          "Задача пользователя, наши разработанные коды и необходимые зависимости перечислены: ",
          "Задача: \"{task}\".",
          "Тип решения: \"{modality}\".",
          "Язык программирования: \"{language}\"",
          "Идеи: \"{ideas}\"",
          "Коды: ",
          "\"{codes}\"",
          "Требования:",
          "\"{requirements}\"",
          "В качестве {assistant_role}, используя Markdown, вы должны написать файл manual.md, который является подробным руководством пользователя по использованию программного обеспечения, включая представление основных функций программного обеспечения, как установить зависимости окружения и как его использовать/играть. Например:",
          "manual.md",
          "```",
          "# LangChain",
          "Создание приложений с LLMs через композицию",
          "Ищете версию на JS/TS? Проверьте LangChain.js.",
          "**Поддержка производства:** Когда вы переводите свои LangChains в производство, мы хотели бы предложить более полную поддержку.",
          "Пожалуйста, заполните эту форму, и мы настроим специализированный канал поддержки в Slack.",
          "## Быстрая установка",
          "`pip install langchain`",
          "или",
          "`conda install langchain -c conda-forge`",
          "## 🤔 Что это?",
          "Большие языковые модели (LLMs) выходят на передний план как технология, способная преобразовать разработку, позволяя разработчикам создавать приложения, которые ранее они не могли создать. Однако использование этих LLMs в отдельности часто недостаточно для создания действительно мощного приложения - настоящая сила проявляется, когда вы можете сочетать их с другими источниками вычислений или знаний.",
          "Эта библиотека призвана помочь в разработке таких типов приложений. Общие примеры этих приложений включают:",
          "**❓ Ответы на вопросы по конкретным документам**",
          "- Документация",
          "- Пример от начала до конца: Ответы на вопросы по базе данных Notion",
          "**🤖 Агенты**",
          "- Документация",
          "- Пример от начала до конца: GPT+WolframAlpha",
          "## 📖 Документация",
          "Пожалуйста, смотрите [здесь](https://python.langchain.com) для полной документации по:",
          "- Начало работы (установка, настройка окружения, простые примеры)",
          "- Примеры How-To (демо, интеграции, вспомогательные функции)",
          "- Справка (полная документация API)",
          "- Ресурсы (высокоуровневое объяснение основных концепций)",
          "```"
      ]
  }
}